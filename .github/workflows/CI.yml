name: CI

on:
  push:
    branches-ignore: [staging.tmp]
  pull_request:
    branches-ignore: [staging.tmp]

jobs:
  webgl_build:
    name: Web Assembly
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: rustup target add wasm32-unknown-unknown
      - run: cargo build --manifest-path examples/Cargo.toml --features gl --target wasm32-unknown-unknown --bin quad
      - run: cargo install -f wasm-bindgen-cli --version 0.2.69
      - run: wasm-bindgen --out-dir target/generated --web target/wasm32-unknown-unknown/debug/quad.wasm
      - run: mv ./.github/workflows/index.html ./target/generated/
      - run: npm i puppeteer-core
      - run: ruby -run -e httpd -p 8000 ./target/generated &
      - run: node ./.github/workflows/webgl_test.js

  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
          [
            MacOS Stable,
            MacOS Nightly,
            Ubuntu Stable,
            Ubuntu Nightly,
            Windows Stable,
            Windows Nightly,
          ]
        include:
          - os: macos-10.15
            name: MacOS Stable
            channel: stable
          - os: macos-10.15
            name: MacOS Nightly
            channel: nightly
          - os: ubuntu-18.04
            name: Ubuntu Stable
            channel: stable
          - os: ubuntu-18.04
            name: Ubuntu Nightly
            channel: nightly
          - os: windows-2019
            name: Windows Stable
            channel: stable
          - os: windows-2019
            name: Windows Nightly
            channel: nightly
    steps:
      - uses: actions/checkout@v2
      - if: matrix.channel == 'nightly'
        name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - if: matrix.os == 'windows-2019'
        name: Install make
        run: choco install make
      #- if: matrix.channel == 'stable'
      #  run: rustup component add clippy
      - run: make all
